## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##

image: redis
tag: 4
## replicas number for each component
replicas: 3

## Redis specific configuration options
redis:
  port: 6379
  masterGroupName: mymaster
  minSlavesToWrite: 1
  minSlavesMaxLag: 5   # Value in seconds
  auth: false          # Configures redis with AUTH (requirepass & masterauth conf params)
  maxMemory: "0"       # Max memory to use for each redis instance. Default is unlimited.
  maxMemoryPolicy: "volatile-lru"  # Max memory policy to use for each redis instance. Default is volatile-lru.
  # Determines if scheduled RDB backups are created. Default is false.
  # Please note that local (on-disk) RDBs will still be created when re-syncing with a new slave. The only way to prevent this is to enable diskless replication.
  rdbBackups: "save 60 1"
  # When enabled, directly sends the RDB over the wire to slaves, without using the disk as intermediate storage. Default is false.
  disklessReplication: "yes"
  additionalConfig: ""


  resources:
    server:
      requests:
        memory: 200Mi
        cpu: 100m
      limits:
        memory: 700Mi
    sentinel:
      requests:
        memory: 200Mi
        cpu: 100m
      limits:
        memory: 200Mi

## Sentinel specific configuration options
sentinel:
  port: 26379
  downAfterMilliseconds: 10000
  failoverTimeout: 180000 # Value in milliseconds
  parallelSyncs: 5
  quorum: 2
  additionalConfig: ""
 
  resources:
    server:
      requests:
        memory: 200Mi
        cpu: 100m
      limits:
        memory: 700Mi
    sentinel:
      requests:
        memory: 200Mi
        cpu: 100m
      limits:
        memory: 200Mi

securityContext:
  runAsUser: 1000
  fsGroup: 1000
  runAsNonRoot: true

## Node labels, affinity, and tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
nodeSelector: {}
podAnnotations: {}
extraLabels: {}
tolerations: []
sentinelAffinity: |
   podAntiAffinity:
     requiredDuringSchedulingIgnoredDuringExecution:
     - labelSelector:
         matchLabels:
           app: {{ template "redis-ha.name" . }}
           release: {{ .Release.Name | quote }}
           component: sentinel
       topologyKey: kubernetes.io/hostname
affinity: |
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchLabels:
          app: {{ template "redis-ha.name" . }}
          release: {{ .Release.Name | quote }}
      topologyKey: kubernetes.io/hostname

podDisruptionBudget:
  maxUnavailable: 1

## Redis password - Not implemented
## Defaults to a random 10-character alphanumeric string if not set and auth is true
## ref: https://github.com/kubernetes/charts/blob/master/stable/redis-ha/templates/redis-auth-secret.yaml
##
## redisPassword:

persistentVolume:
  enabled: true
  ## redis-ha data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessModes:
    - ReadWriteOnce
  size: 10Gi
  annotations: {}
