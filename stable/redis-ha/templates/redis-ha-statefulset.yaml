apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: {{ template "redis-ha.fullname" . }}
  labels:
    name: {{ template "redis-ha.fullname" . }}
    release: {{ .Release.Name }}
    app: {{ template "redis-ha.fullname" . }}
spec:
  selector:
    matchLabels:
{{ include "labels.standard" . | indent 6 }}
  serviceName: {{ template "redis-ha.fullname" . }}
  replicas: {{ .Values.replicas }}
  updateStrategy:
    type: OnDelete
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/redis-ha-configmap.yaml") . | sha256sum }}
      {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations . | indent 8 }}
      {{- end }}
      labels:
{{ include "labels.standard" . | indent 8 }}
      {{- if .Values.extraLabels }}
{{ toYaml .Values.extraLabels | indent 8 }}
      {{- end }}
    spec:
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      affinity:
 {{ tpl .Values.serverAffinity . | indent 8 }}
      initContainers:
      - name: copy-config
        image: busybox
        command:
          - "sh"
        args:
          - "-c"
          - |
            set -ex
            if [[ ! -f /data/redis.conf && ! -f /data/sentinel.conf ]]; then
                echo "No redis config found!"
                mkdir -p /data/conf/
                echo "Copying base config.."

                cp /readonly-config/redis.conf /data/conf/redis.conf
                cp /readonly-config/sentinel.conf /data/conf/sentinel.conf
                chown -R {{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.fsgroup }} /data/conf
   
                if [[ "$HOSTNAME" != '{{ template "redis-ha.fullname" . }}-0' ]]; then
                    echo "Copying slave config.."
                    cat /readonly-config/slave.conf >> /data/conf/redis.conf
                fi
            else
                echo "Found existing configs found in /data"
                # Need to update configs when changed
                # echo "updating sentinel config"
                # grep -v /readonly-config/sentinel.conf -e "sentinel monitor" 
            fi
        volumeMounts:
          - name: config
            mountPath: /readonly-config
            readOnly: true
          - name: data
            mountPath: /data
      containers:
      - name: redis
        securityContext:
{{ toYaml .Values.securityContext | indent 10 }}
        image: {{ .Values.image }}:{{ .Values.tag }}
        command:
          - redis-server
        args:
          - /data/conf/redis.conf
        livenessProbe:
          exec:
            command: ["redis-cli", "ping"]
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
{{ toYaml .Values.redis.resources | indent 10 }}
        ports:
          - name: redis
            containerPort: 6379
        volumeMounts:
          - mountPath: /data
            name: data
      - name: sentinel
        securityContext:
{{ toYaml .Values.securityContext | indent 10 }}
        image: {{ .Values.image }}:{{ .Values.tag }}
        command:
          - redis-sentinel
        args:
          - /data/conf/sentinel.conf
        livenessProbe:
          exec:
            command: ["redis-cli", "ping"]
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
{{ toYaml .Values.sentinel.resources | indent 10 }}
        ports:
          - name: sentinel
            containerPort: 26379
        volumeMounts:
          - mountPath: /data
            name: data
      volumes:
        - name: config
          configMap:
            name: {{ template "redis-ha.fullname" . }}-configmap
{{- if .Values.persistentVolume.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
        {{- range $key, $value := .Values.persistentVolume.annotations }}
          {{ $key }}: {{ $value }}
        {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistentVolume.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistentVolume.size | quote }}
      {{- if .Values.persistentVolume.storageClass }}
      {{- if (eq "-" .Values.persistentVolume.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.persistentVolume.storageClass }}"
      {{- end }}
      {{- end }}
{{- else }}
      volumes:
      - name: data
        emptyDir: {}
{{- end }}
